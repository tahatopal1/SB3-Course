### Spring Boot Starters Summary

#### Problem with Building Spring Applications

- **Complexity:**
  - Building Spring applications can be difficult due to the numerous Maven dependencies required.
  - Developers often struggle to determine the exact dependencies needed for specific applications (e.g., Spring MVC, Hibernate).

#### Solution: Spring Boot Starters

- **What are Spring Boot Starters?**
  - Curated lists of Maven dependencies grouped together.
  - Tested and verified by the Spring Development team.
  - Simplifies the process for developers by reducing Maven configuration.

- **Benefits:**
  - Eliminates the need for searching and hunting for individual dependencies.
  - Ensures compatible versions of dependencies.
  - Provides a one-stop shop for necessary dependencies.

#### Example: Spring MVC

- **Traditional Approach:**
  - Manually add dependencies like Spring MVC, Hibernate Validator, etc.

- **Using Spring Boot Starter:**
  - Add a single dependency in the `pom.xml` file:
    ```xml
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    ```
  - This starter includes dependencies such as `spring-web`, `spring-webmvc`, `hibernate-validator`, `json`, `tomcat`.

- **Spring Initializr:**
  - Selecting "Web" on the Spring Initializr site automatically adds `spring-boot-starter-web` to the `pom.xml`.

#### Example: Web and Security

- **Selecting Dependencies:**
  - On the Spring Initializr site, select dependencies for Web, Security, JPA, and Thymeleaf.
  - Generated `pom.xml` includes:
    ```xml
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId</artifactId>
        <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    ```

#### Exploring Spring Boot Starters

- **Number of Starters:**
  - Over 30 Spring Boot Starters are available.
  - Examples include:
    - `spring-boot-starter-web` for web apps, validation, REST, with Tomcat.
    - `spring-boot-starter-security` for security support.
    - `spring-boot-starter-data-jpa` for JPA and Hibernate support.

#### Checking What's Inside a Starter

- **Using IDEs:**
  - **Eclipse:**
    - Open `pom.xml`, select the "Dependency Hierarchy" tab, and expand the desired starter.
    - View the included dependencies.

  - **IntelliJ:**
    - Use the menu option `View > Tool Windows > Maven Projects`, then expand dependencies to view contents.

By using Spring Boot Starters, developers can streamline the setup process, ensure compatibility, and reduce configuration overhead, making development more efficient and manageable.